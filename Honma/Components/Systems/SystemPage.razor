@attribute [Route($"{Routes.Systems}/{{systemSymbol}}")]
@inherits FluxorComponent

<MudContainer MaxWidth="MaxWidth.Small">
    @if (State.Value.System is not null)
    {
        <MudStack Spacing="4">
            <AppSurface>
                <SystemDetails System="State.Value.System.Value"/>
            </AppSurface>

            <AppSurface>
                <WaypointsList SystemSymbol="@SystemSymbol"
                               WaypointClicked="NavigateToWaypoint"/>
            </AppSurface>
        </MudStack>
    }
</MudContainer>

@code {

    [Parameter] public required string SystemSymbol { get; set; }

    [Inject] public required IState<SystemState> State { get; set; }

    [Inject] public required IDispatcher Dispatcher { get; set; }

    [Inject] public required NavigationManager NavigationManager { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new SystemLoad(SystemSymbol));
    }

    private void NavigateToWaypoint(Waypoint waypoint)
    {
        NavigationManager.NavigateTo($"{Routes.Systems}/{waypoint.SystemSymbol}{Routes.Waypoints}/{waypoint.Symbol}");
    }

}