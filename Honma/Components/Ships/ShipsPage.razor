@attribute [Route(Routes.Ships)]
@inherits FluxorComponent

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudGrid>
        <MudItem xs="3" Class="mt-2">
            <ShipList Ships="State.Value.Ships" @bind-SelectedShip="_selectedShip"/>

            @if (State.Value.Pagination.Total / _pageSize > 1)
            {
                <MudPagination @bind-Selected="_page"
                               Class="mt-4" Count="State.Value.Pagination.Total / _pageSize">
                </MudPagination>
            }
        </MudItem>

        <MudItem xs="9" Class="mt-2 height-screen">
            @if (_selectedShip is null)
            {
                <MudPaper Elevation="2" Class="height-full rounded-lg">
                    <MudStack Class="height-full" Justify="Justify.Center" AlignItems="AlignItems.Center">
                        <MudText>Select a ship from the list to view its details</MudText>
                    </MudStack>
                </MudPaper>
            }
            else
            {
                <ShipDetails Ship="_selectedShip.Value"/>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code {

    [Inject] public required IState<ShipState> State { get; set; }

    [Inject] public required IDispatcher Dispatcher { get; set; }

    private int _page = 1;
    private int _pageSize = 10;
    private Ship? _selectedShip;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new ShipsLoad(_pageSize, _page));
    }

}