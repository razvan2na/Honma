@attribute [Route(Routes.Factions)]
@using Honma.States
@using Honma.Actions
@inherits FluxorComponent

@if (State.Value.Factions is not null)
{
    var factions = State.Value.Factions ?? [];

    <MudHidden Breakpoint="Breakpoint.LgAndUp">
        <MudContainer Class="pb-8"
                      MaxWidth="MaxWidth.Small">
            <MudText Class="ml-6 mt-8"
                     Color="Color.Tertiary">
                <b>Recruiting</b>
            </MudText>
            <MudExpansionPanels Class="mt-4 rounded-lg"
                                Elevation="0">
                @foreach (var faction in factions.Where(faction => faction.IsRecruiting))
                {
                    <MudExpansionPanel>
                        <TitleContent>
                            <FactionDetailsTitle Faction="@faction"
                                                 HideTag
                                                 Typo="Typo.body1"/>
                        </TitleContent>
                        <ChildContent>
                            <FactionDetailsContent Faction="@faction"/>
                        </ChildContent>
                    </MudExpansionPanel>
                }
            </MudExpansionPanels>

            <MudText Class="ml-6 mt-8"
                     Color="Color.Secondary">
                <b>Not Recruiting</b>
            </MudText>
            <MudExpansionPanels Class="mt-4 rounded-lg"
                                Elevation="0">
                @foreach (var faction in factions.Where(faction => !faction.IsRecruiting))
                {
                    <MudExpansionPanel>
                        <TitleContent>
                            <FactionDetailsTitle Faction="@faction"
                                                 HideTag
                                                 Typo="Typo.body1"/>
                        </TitleContent>
                        <ChildContent>
                            <FactionDetailsContent Faction="@faction"/>
                        </ChildContent>
                    </MudExpansionPanel>
                }
            </MudExpansionPanels>
        </MudContainer>
    </MudHidden>

    <MudHidden Breakpoint="Breakpoint.MdAndDown">
        <MudContainer MaxWidth="MaxWidth.Large">
            <MudGrid Class="mt-2">
                <MudItem xs="4">
                    <MudPaper Class="pa-4 rounded-lg"
                              Elevation="0">
                        <MudList @bind-SelectedItem="_selectedListItem"
                                 @bind-SelectedValue="_selectedFaction"
                                 Clickable
                                 DisablePadding>
                            <MudText Class="ml-4"
                                     Color="Color.Tertiary">
                                <b>Recruiting</b>
                            </MudText>
                            <MudDivider Class="my-2"
                                        DividerType="DividerType.Middle">
                            </MudDivider>
                            @foreach (var faction in factions.Where(faction => faction.IsRecruiting))
                            {
                                <MudListItem Class="rounded-lg"
                                             Value="faction">
                                    @faction.Name
                                </MudListItem>
                            }
                            <MudText Class="ml-4 mt-8"
                                     Color="Color.Secondary">
                                <b>Not Recruiting</b>
                            </MudText>
                            <MudDivider Class="my-2"
                                        DividerType="DividerType.Middle">
                            </MudDivider>
                            @foreach (var faction in factions.Where(faction => !faction.IsRecruiting))
                            {
                                <MudListItem Class="rounded-lg"
                                             Value="faction">
                                    @faction.Name
                                </MudListItem>
                            }
                        </MudList>
                    </MudPaper>
                </MudItem>

                @if (_selectedFaction is Faction selectedFaction)
                {
                    <MudItem xs="8">
                        <MudPaper Class="px-8 py-4 rounded-lg"
                                  Elevation="0">
                            <MudStack AlignItems="AlignItems.Center"
                                      Justify="Justify.SpaceBetween"
                                      Row>
                                <MudText Typo="Typo.h6">
                                    @selectedFaction.Name
                                </MudText>
                                <MudText Color="Color.Primary"
                                         Typo="Typo.h6">
                                    [@selectedFaction.Symbol]
                                </MudText>
                            </MudStack>

                            <MudDivider Class="my-4"
                                        DividerType="DividerType.Middle">
                            </MudDivider>

                            <MudStack AlignItems="AlignItems.Center"
                                      Justify="Justify.Center"
                                      Row
                                      Spacing="0">
                                @foreach (var trait in selectedFaction.Traits)
                                {
                                    <MudTooltip Arrow>
                                        <ChildContent>
                                            <MudChip Color="Color.Secondary"
                                                     Variant="Variant.Text">
                                                @trait.Name
                                            </MudChip>
                                        </ChildContent>
                                        <TooltipContent>
                                            <MudText Class="ma-2"
                                                     Style="max-width: 500px"
                                                     Typo="Typo.body2">
                                                @trait.Description
                                            </MudText>
                                        </TooltipContent>
                                    </MudTooltip>
                                }
                            </MudStack>

                            @if (!string.IsNullOrWhiteSpace(selectedFaction.Headquarters))
                            {
                                <MudText Class="mt-4">
                                    <b>Headquarters:</b> <MudLink>@selectedFaction.Headquarters</MudLink>
                                </MudText>
                            }

                            <MudText Class="mt-4 word-break">@selectedFaction.Description</MudText>
                        </MudPaper>
                    </MudItem>
                }
            </MudGrid>
        </MudContainer>
    </MudHidden>
}


@code
{
    [Inject] private IState<FactionsState> State { get; set; } = null!;

    [Inject] private IDispatcher Dispatcher { get; set; } = null!;

    private MudListItem _selectedListItem;
    private object _selectedFaction;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new FactionsLoad());
    }
}